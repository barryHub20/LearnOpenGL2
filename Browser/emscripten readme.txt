Always refer to this tutorial page for the basics. It covers:
-build a .cpp
-read from file (virtual filesystem on browser)
-optimizing code (eg. -01, -02 flag to determine how optimize it should be for debug/release)
https://emscripten.org/docs/getting_started/Tutorial.html
https://emscripten.org/docs/compiling/Building-Projects.html

Setup:
1) Install emscripten: https://emscripten.org/docs/getting_started/Tutorial.html
2) Install workflow for windows: https://medium.com/statuscode/setting-up-the-ultimate-webassembly-c-workflow-6484efa3e162
	-cygwin: http://cygwin.com/install.html. It's a linux shell emulator on Windows that brings linux functionality to
	Windows. It also has a package manager (setup-x86_64.exe) that let's you install functionalities (like make command)
	that you need.
	-add the Cygwin bin folder to system path to be able to use make command in windows cmd
	-makefile is needed: https://cognitivewaves.wordpress.com/makefiles/. We need to configure cmake to generate makefile
	instead of VS 2019. try https://stackoverflow.com/questions/32569800/changing-current-cmake-generator.
	cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release/Debug
3) Build cmake/target_html (hello_world_gles.c):
	-NOTE: take a look at the cmake file to see what are the configurations (-O2, FILESYSTEM=0 etc.)
	-emcmake cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release/Debug
	-emmake make (depending on project's cmake, the .html and .js could be already generated by the make command, rendering emcc unnecessary)
4) You can change the source too:
	-swap out hello_world_gles.c to hello_world_gles_proxy.c and see the results
	-please check out the source files before including it to the cmake to ensure it's includes are covered by the cmake file
5) GLFW:
	-https://h3r.github.io/teaching/webgl2wasm/